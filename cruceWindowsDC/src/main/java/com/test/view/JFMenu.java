/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.test.view;

import com.test.controller.CruceWindowsV2;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ECM3200I
 */
public class JFMenu extends javax.swing.JFrame {
	private static final String DEFAULT_OPEN_WINDOWS="D:\\OneDrive - GLOBAL HITSS\\2023";

    /**
     * Creates new form JFMenu
     */
    public JFMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbArchivoTorre = new javax.swing.JButton();
        jtfPathTorre = new javax.swing.JTextField();
        jbArchivoUcmdb = new javax.swing.JButton();
        jbArchivoServiceManager = new javax.swing.JButton();
        jtfPathUcmdb = new javax.swing.JTextField();
        jtfPathSM = new javax.swing.JTextField();
        jbGuardar = new javax.swing.JButton();
        jbEjecutar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cruce Windows vs UCMDB vs SM Datacenter");
        setResizable(false);

        jbArchivoTorre.setText("Seleccionar archivo Torre");
        jbArchivoTorre.setToolTipText("");
        jbArchivoTorre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbArchivoTorreActionPerformed(evt);
            }
        });

        jtfPathTorre.setEditable(false);

        jbArchivoUcmdb.setText("Seleccionar archivo Ucmdb");
        jbArchivoUcmdb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbArchivoUcmdbActionPerformed(evt);
            }
        });

        jbArchivoServiceManager.setText("Seleccionar archivo ServiceManager");
        jbArchivoServiceManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbArchivoServiceManagerActionPerformed(evt);
            }
        });

        jtfPathUcmdb.setEditable(false);

        jtfPathSM.setEditable(false);

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbEjecutar.setText("Ejecutar");
        jbEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEjecutarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbArchivoServiceManager, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbArchivoUcmdb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbArchivoTorre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfPathSM)
                    .addComponent(jtfPathTorre)
                    .addComponent(jtfPathUcmdb, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbGuardar)
                .addGap(104, 104, 104)
                .addComponent(jbEjecutar)
                .addGap(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbArchivoTorre)
                    .addComponent(jtfPathTorre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbArchivoUcmdb)
                    .addComponent(jtfPathUcmdb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPathSM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbArchivoServiceManager))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardar)
                    .addComponent(jbEjecutar))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jbArchivoTorre.getAccessibleContext().setAccessibleName("Jbseleccionar archivo Torre");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbArchivoUcmdbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbArchivoUcmdbActionPerformed
        //Seleccionar archivo
        String ucmdbFile=JFMenu.selectFile();
        //Ajustar texto
        jtfPathUcmdb.setText(ucmdbFile);
    }//GEN-LAST:event_jbArchivoUcmdbActionPerformed

    private void jbArchivoTorreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbArchivoTorreActionPerformed
        //Seleccionar archivo
        String towerfile=JFMenu.selectFile();
        //Ajustar texto
        jtfPathTorre.setText(towerfile);        
    }//GEN-LAST:event_jbArchivoTorreActionPerformed

    private void jbArchivoServiceManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbArchivoServiceManagerActionPerformed
        //Seleccionar archivo
        String smFile=JFMenu.selectFile();
        //Ajustar texto
        jtfPathSM.setText(smFile);        
        //enivar ruta a... cruceUnix
    }//GEN-LAST:event_jbArchivoServiceManagerActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        //TODO: AL DAR EN GUARDAR, VALIDAR SI LA INFO ESTA COMPLETA Y ENVIAR A CRUCEUNIX
        if(!(jtfPathTorre.getText().isBlank() && jtfPathUcmdb.getText().isBlank() && jtfPathSM.getText().isBlank())){
           //
            CruceWindowsV2.setWindowsFilePath(jtfPathTorre.getText());
            CruceWindowsV2.setUCMDB_FILE_PATH(jtfPathUcmdb.getText());
            CruceWindowsV2.setSM_FILE_PATH(jtfPathSM.getText());
            
            printDialog("Rutas seleccionadas y guardadas correctamente");
        }
        
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEjecutarActionPerformed
        // TODO add your handling code here:
        CruceWindowsV2 cruceWindows = new CruceWindowsV2();
        List<String> filesPath=cruceWindows.mainController();
        for(String filePath:filesPath){
            printDialog("Ruta "+filePath);
        }
            
    }//GEN-LAST:event_jbEjecutarActionPerformed

    private void printDialog(String text){
        
    JOptionPane.showMessageDialog(null,text);
    
    }
    private static String selectFile(){
        String selectedFile="";
        //Se crea el JFileChooser. Se le indica que la ventana se abra en el directorio actual                    
        JFileChooser fileChooser = new JFileChooser(DEFAULT_OPEN_WINDOWS);    
        //Se crea el filtro. El primer parámetro es el mensaje que se muestra,
        //el segundo es la extensión de los ficheros que se van a mostrar      
        FileFilter filtro = new FileNameExtensionFilter("Archivos excel o csv(.xlsx)", "xlsx","csv"); 
        //Se le asigna al JFileChooser el filtro
        fileChooser.setFileFilter(filtro);
        //se muestra la ventana
        int valor = fileChooser.showOpenDialog(fileChooser);
        if (valor == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile().getAbsolutePath();
        }else{
             System.out.println("No se ha seleccionado ningún fichero");
        }
        return selectedFile;
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbArchivoServiceManager;
    private javax.swing.JButton jbArchivoTorre;
    private javax.swing.JButton jbArchivoUcmdb;
    private javax.swing.JButton jbEjecutar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JTextField jtfPathSM;
    private javax.swing.JTextField jtfPathTorre;
    private javax.swing.JTextField jtfPathUcmdb;
    // End of variables declaration//GEN-END:variables
}
